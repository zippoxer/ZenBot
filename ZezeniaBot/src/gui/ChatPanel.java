/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import client.Channel;
import client.Client;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import structures.ChannelType;

/**
 *
 * @author Moshe Revah
 */
public class ChatPanel extends javax.swing.JPanel {

    private static ChatPanel instance;
    private DefaultComboBoxModel channelModel;
    private String requestedChannel = null;
    private int previouslySelected = -1;

    /**
     * Creates new form NewJFrame
     */
    public ChatPanel() {
        instance = this;
        initComponents();
        channelModel = new DefaultComboBoxModel();
        channelComboBox.setModel(channelModel);
        channelModel.addElement("<New channel>");

        if (Client.getInstance() != null) {
            for (Channel ch : Client.getInstance().getOpenChannels()) {
                int index = channelModel.getSize() - 1;
                channelModel.insertElementAt(ch.name, index);
                if (ch.name.equals("Main")) {
                    channelComboBox.setSelectedIndex(index);
                }
            }
        }
    }

    public static ChatPanel getInstance() {
        return instance;
    }

    public void addChannel(client.Channel channel) {
        int index = channelModel.getSize() - 1;
        channelModel.insertElementAt(channel.name, index);
        if (channel.name.equals(requestedChannel)) {
            channelComboBox.setSelectedIndex(index);
            requestedChannel = null;
        }
    }

    public void removeChannel(client.Channel channel) {
        channelModel.removeElement(channel.name);
    }

    public void appendLine(String s) {
        if (textArea.getText().length() == 0) {
            textArea.append(s);
        } else {
            textArea.append("\n" + s);
        }
        textArea.setCaretPosition(textArea.getText().length() - 1);
    }

    public void addMessage(Channel ch, String sender, String message) {
        appendLine("(" + ch.name + ")" + sender + ": " + message);
    }

    public void addCancelMessage(String message) {
        appendLine("(CANCEL) " + message);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        newChannelDialog = new javax.swing.JDialog();
        channelTextField = new javax.swing.JTextField();
        publicButton = new javax.swing.JButton();
        privateButton = new javax.swing.JButton();
        inputArea = new javax.swing.JTextField();
        jScrollPane = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        channelComboBox = new javax.swing.JComboBox();

        newChannelDialog.setTitle("New channel");
        newChannelDialog.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        newChannelDialog.setLocationByPlatform(true);
        newChannelDialog.setMinimumSize(new java.awt.Dimension(141, 100));
        newChannelDialog.setResizable(false);
        newChannelDialog.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                newChannelDialogComponentHidden(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                newChannelDialogComponentShown(evt);
            }
        });

        publicButton.setText("Public");
        publicButton.setMargin(new java.awt.Insets(2, 10, 2, 10));
        publicButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                publicButtonMouseClicked(evt);
            }
        });

        privateButton.setText("Private");
        privateButton.setMargin(new java.awt.Insets(2, 10, 2, 10));
        privateButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                privateButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout newChannelDialogLayout = new javax.swing.GroupLayout(newChannelDialog.getContentPane());
        newChannelDialog.getContentPane().setLayout(newChannelDialogLayout);
        newChannelDialogLayout.setHorizontalGroup(
            newChannelDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newChannelDialogLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(newChannelDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(channelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(newChannelDialogLayout.createSequentialGroup()
                        .addComponent(publicButton)
                        .addGap(6, 6, 6)
                        .addComponent(privateButton)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        newChannelDialogLayout.setVerticalGroup(
            newChannelDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newChannelDialogLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(channelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(newChannelDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(publicButton, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(newChannelDialogLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(privateButton)))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        setBorder(javax.swing.BorderFactory.createTitledBorder("Chat"));
        setPreferredSize(new java.awt.Dimension(404, 215));

        inputArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputAreahandleActionPerformed(evt);
            }
        });

        textArea.setColumns(20);
        textArea.setEditable(false);
        textArea.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        textArea.setLineWrap(true);
        textArea.setRows(5);
        jScrollPane.setViewportView(textArea);

        channelComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                channelComboBoxItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(channelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputArea, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(channelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void inputAreahandleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputAreahandleActionPerformed
        // enter pressed on chat input field
        try {
            Client.getInstance().sendMessage(channelComboBox.getSelectedItem().toString(), inputArea.getText());
        } catch (IOException e) {
            e.printStackTrace();
        }
        inputArea.setText("");
    }//GEN-LAST:event_inputAreahandleActionPerformed

    private void publicButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_publicButtonMouseClicked
        open(ChannelType.PUBLIC);
    }//GEN-LAST:event_publicButtonMouseClicked

    private void privateButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_privateButtonMouseClicked
        open(ChannelType.PRIVATE);
    }//GEN-LAST:event_privateButtonMouseClicked

    private void channelComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_channelComboBoxItemStateChanged
        if (channelModel.getSize() > 1 && "<New channel>".equals(channelComboBox.getSelectedItem().toString())) {
            newChannelDialog.setLocation(channelComboBox.getLocationOnScreen().x,
                    channelComboBox.getLocationOnScreen().y - 20);
            newChannelDialog.setVisible(true);
        } else {
            previouslySelected = channelComboBox.getSelectedIndex();
        }
        if (previouslySelected != channelComboBox.getSelectedIndex()) {
            channelComboBox.setSelectedIndex(previouslySelected);
        }
    }//GEN-LAST:event_channelComboBoxItemStateChanged

    private void newChannelDialogComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_newChannelDialogComponentHidden
        channelTextField.setText("");
    }//GEN-LAST:event_newChannelDialogComponentHidden

    private void newChannelDialogComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_newChannelDialogComponentShown
        channelTextField.requestFocusInWindow();
    }//GEN-LAST:event_newChannelDialogComponentShown

    private void open(short type) {
        newChannelDialog.setVisible(false);
        requestedChannel = channelTextField.getText();

        // Already opened.
        if (channelModel.getIndexOf(requestedChannel) != -1) {
            channelComboBox.setSelectedItem(requestedChannel);
            return;
        }
        
        try {
            new Channel(type, requestedChannel).open();
        } catch (IOException ex) {
            Logger.getLogger(ChatPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        channelTextField.requestFocusInWindow();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox channelComboBox;
    private javax.swing.JTextField channelTextField;
    private javax.swing.JTextField inputArea;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JDialog newChannelDialog;
    private javax.swing.JButton privateButton;
    private javax.swing.JButton publicButton;
    private javax.swing.JTextArea textArea;
    // End of variables declaration//GEN-END:variables
}
